name: Tag and push new version (main)

on:
  push:
    branches:
      - main

jobs:
  tag-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Cache jq
        uses: actions/cache@v3
        env:
          cache-name: cache-jq
        with:
          path: ~/.cache/jq
          key: ${{ runner.os }}-${{ hashFiles('jq') }}
          restore-keys: |
            ${{ runner.os }}-jq-
      - name: Install jq
        run: |
          if ! command -v jq > /main/null; then
            sudo apt-get update
            sudo apt-get install jq
          fi
      - name: Check last commit message
        id: commit
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1)
          if [[ $COMMIT_MESSAGE == bump* ]]; then
          echo "Skipping workflow as commit message starts with 'bump'"
          echo "SKIP_WORKFLOW=true" >> $GITHUB_ENV
          fi
      - name: Halt job if commit message starts with 'bump'
        run: |
          if [[ "${{ env.SKIP_WORKFLOW }}" == "true" ]]; then
            echo "Job halted"
            exit 1
          fi
      - name: Bump npm version based on last commit message
        id: bump_version
        run: |
          echo "start!"
          git config --global user.email "yoojehwan1875@gmail.com"
          git config --global user.name "JeHwanYoo"
          
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MSG" =~ ^docs.* ]] || [[ "$LAST_COMMIT_MSG" =~ ^chore.* ]]
          then
            echo "no bump"
            exit 0
          fi
          
          npm_package_version=$(jq <package.json -r '.version | split("-")[0]')
          npm version ${npm_package_version} --no-git-tag-version
          VERSION=$(jq -r .version package.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Commit changes
        run: |
          if [ -n "${{ env.VERSION }}" ]
          then
            git add .
            git commit -m "bump: ${{ env.VERSION }}"
            git push origin main --force
          fi
      - name: Create tag
        run: |
          if [ -n "${{ env.VERSION }}" ]
          then
            git tag -f v${{ env.VERSION }}
            git push --tags --force
            git fetch origin
            git checkout dev
            git reset --hard origin/main
            git push origin dev --force
            git checkout local
            git reset --hard origin/main
            git push origin local --force
          fi
      - name: Create Release Note
        run: |
          if [ -n "${{ env.VERSION }}" ]
          then
            PRERELEASE=${{ env.isPrerelease }}
            curl --request POST \
              --url https://api.github.com/repos/${{ github.repository }}/releases \
              --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              --header 'content-type: application/json' \
              --data '{
                "tag_name": "v${{ env.VERSION }}",
                "name": "v${{ env.VERSION }}",
                "body": "'"${{ env.RELEASE_NOTE }}"'",
                "draft": false,
                "prerelease": false,
                "generate_release_notes": true
              }'
          fi
